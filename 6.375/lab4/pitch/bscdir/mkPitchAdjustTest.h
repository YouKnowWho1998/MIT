/*
 * Generated by Bluespec Compiler, version 2023.07 (build 0eb551d)
 * 
 * On Sun Sep 24 13:19:54 CST 2023
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkPitchAdjustTest_h__
#define __mkPitchAdjustTest_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkPitchAdjustTest module */
class MOD_mkPitchAdjustTest : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt32> INST_adjust_bin;
  MOD_Reg<tUInt8> INST_adjust_done;
  MOD_Reg<tUInt8> INST_adjust_i;
  MOD_Reg<tUWide> INST_adjust_in_latch;
  MOD_Reg<tUInt32> INST_adjust_inphases_0;
  MOD_Reg<tUInt32> INST_adjust_inphases_1;
  MOD_Reg<tUInt32> INST_adjust_inphases_2;
  MOD_Reg<tUInt32> INST_adjust_inphases_3;
  MOD_Reg<tUInt32> INST_adjust_inphases_4;
  MOD_Reg<tUInt32> INST_adjust_inphases_5;
  MOD_Reg<tUInt32> INST_adjust_inphases_6;
  MOD_Reg<tUInt32> INST_adjust_inphases_7;
  MOD_Reg<tUWide> INST_adjust_out_latch;
  MOD_Reg<tUInt32> INST_adjust_outphases_0;
  MOD_Reg<tUInt32> INST_adjust_outphases_1;
  MOD_Reg<tUInt32> INST_adjust_outphases_2;
  MOD_Reg<tUInt32> INST_adjust_outphases_3;
  MOD_Reg<tUInt32> INST_adjust_outphases_4;
  MOD_Reg<tUInt32> INST_adjust_outphases_5;
  MOD_Reg<tUInt32> INST_adjust_outphases_6;
  MOD_Reg<tUInt32> INST_adjust_outphases_7;
  MOD_Fifo<tUWide> INST_adjust_outputFIFO;
  MOD_Reg<tUInt32> INST_check;
  MOD_Reg<tUInt32> INST_feed;
  MOD_Reg<tUInt8> INST_passed;
 
 /* Constructor */
 public:
  MOD_mkPitchAdjustTest(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_RL_finish;
  tUInt8 DEF_CAN_FIRE_RL_finish;
  tUInt8 DEF_WILL_FIRE_RL_c2;
  tUInt8 DEF_CAN_FIRE_RL_c2;
  tUInt8 DEF_WILL_FIRE_RL_c1;
  tUInt8 DEF_CAN_FIRE_RL_c1;
  tUInt8 DEF_WILL_FIRE_RL_c0;
  tUInt8 DEF_CAN_FIRE_RL_c0;
  tUInt8 DEF_WILL_FIRE_RL_f2;
  tUInt8 DEF_CAN_FIRE_RL_f2;
  tUInt8 DEF_WILL_FIRE_RL_f1;
  tUInt8 DEF_CAN_FIRE_RL_f1;
  tUInt8 DEF_WILL_FIRE_RL_f0;
  tUInt8 DEF_CAN_FIRE_RL_f0;
  tUInt8 DEF_WILL_FIRE_RL_adjust_loop_end;
  tUInt8 DEF_CAN_FIRE_RL_adjust_loop_end;
  tUInt8 DEF_WILL_FIRE_RL_adjust_loop;
  tUInt8 DEF_CAN_FIRE_RL_adjust_loop;
  tUInt8 DEF_x__h4297;
  tUInt32 DEF_x__h19762;
  tUInt32 DEF_x__h19757;
  tUInt8 DEF_adjust_i_EQ_7___d6;
  tUInt8 DEF_NOT_adjust_i_EQ_7___d7;
 
 /* Local definitions */
 private:
  tUInt32 DEF_unsigned_0___d238;
  tUInt32 DEF_unsigned_adjust_outputFIFO_first__41_BITS_367_ETC___d263;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_367_TO_352___d222;
  tUInt32 DEF_unsigned_adjust_outputFIFO_first__41_BITS_319_ETC___d260;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_319_TO_304___d211;
  tUInt32 DEF_unsigned_adjust_outputFIFO_first__41_BITS_271_ETC___d257;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_271_TO_256___d200;
  tUInt32 DEF_unsigned_adjust_outputFIFO_first__41_BITS_223_ETC___d254;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_223_TO_208___d189;
  tUInt32 DEF_unsigned_adjust_outputFIFO_first__41_BITS_175_ETC___d251;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_175_TO_160___d178;
  tUInt32 DEF_unsigned_adjust_outputFIFO_first__41_BITS_127_ETC___d248;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_127_TO_112___d167;
  tUInt32 DEF_unsigned_adjust_outputFIFO_first__41_BITS_79__ETC___d245;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_79_TO_64___d156;
  tUInt32 DEF_unsigned_adjust_outputFIFO_first__41_BITS_31__ETC___d242;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_31_TO_16___d145;
  tUInt32 DEF_signed_1___d237;
  tUInt32 DEF_signed_0___d239;
  tUInt32 DEF_signed_adjust_outputFIFO_first__41_BITS_351_T_ETC___d264;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_351_TO_336___d226;
  tUInt32 DEF_signed_adjust_outputFIFO_first__41_BITS_383_T_ETC___d262;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_383_TO_368___d219;
  tUInt32 DEF_signed_adjust_outputFIFO_first__41_BITS_303_T_ETC___d261;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_303_TO_288___d215;
  tUInt32 DEF_signed_adjust_outputFIFO_first__41_BITS_335_T_ETC___d259;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_335_TO_320___d208;
  tUInt32 DEF_signed_adjust_outputFIFO_first__41_BITS_255_T_ETC___d258;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_255_TO_240___d204;
  tUInt32 DEF_signed_adjust_outputFIFO_first__41_BITS_287_T_ETC___d256;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_287_TO_272___d197;
  tUInt32 DEF_signed_adjust_outputFIFO_first__41_BITS_207_T_ETC___d255;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_207_TO_192___d193;
  tUInt32 DEF_signed_adjust_outputFIFO_first__41_BITS_239_T_ETC___d253;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_239_TO_224___d186;
  tUInt32 DEF_signed_adjust_outputFIFO_first__41_BITS_159_T_ETC___d252;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_159_TO_144___d182;
  tUInt32 DEF_signed_adjust_outputFIFO_first__41_BITS_191_T_ETC___d250;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_191_TO_176___d175;
  tUInt32 DEF_signed_adjust_outputFIFO_first__41_BITS_111_T_ETC___d249;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_111_TO_96___d171;
  tUInt32 DEF_signed_adjust_outputFIFO_first__41_BITS_143_T_ETC___d247;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_143_TO_128___d164;
  tUInt32 DEF_signed_adjust_outputFIFO_first__41_BITS_63_TO_ETC___d246;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_63_TO_48___d160;
  tUInt32 DEF_signed_adjust_outputFIFO_first__41_BITS_95_TO_ETC___d244;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_95_TO_80___d153;
  tUInt32 DEF_signed_adjust_outputFIFO_first__41_BITS_15_TO_ETC___d243;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_15_TO_0___d149;
  tUInt32 DEF_signed_adjust_outputFIFO_first__41_BITS_47_TO_ETC___d241;
  tUInt32 DEF_adjust_outputFIFO_first__41_BITS_47_TO_32___d142;
  tUWide DEF_adjust_out_latch__h4283;
  tUWide DEF_adjust_in_latch__h2435;
  tUWide DEF_adjust_outputFIFO_first____d141;
  tUWide DEF_IF_adjust_bin_BITS_18_TO_16_7_EQ_7_1_THEN_SEL__ETC___d124;
  tUWide DEF_IF_adjust_bin_BITS_18_TO_16_7_EQ_7_1_THEN_SEL__ETC___d119;
  tUWide DEF_IF_adjust_bin_BITS_18_TO_16_7_EQ_7_1_THEN_SEL__ETC___d114;
  tUWide DEF_IF_adjust_bin_BITS_18_TO_16_7_EQ_7_1_THEN_SEL__ETC___d109;
  tUInt8 DEF_NOT_adjust_outputFIFO_first__41_BITS_383_TO_36_ETC___d229;
  tUInt8 DEF_NOT_adjust_outputFIFO_first__41_BITS_15_TO_0_4_ETC___d151;
  tUInt8 DEF_NOT_adjust_outputFIFO_first__41_BITS_31_TO_16__ETC___d147;
  tUInt8 DEF_NOT_adjust_outputFIFO_first__41_BITS_47_TO_32__ETC___d152;
  tUInt8 DEF_NOT_adjust_outputFIFO_first__41_BITS_95_TO_80__ETC___d163;
  tUInt8 DEF_NOT_adjust_outputFIFO_first__41_BITS_191_TO_17_ETC___d185;
  tUInt8 DEF_NOT_adjust_outputFIFO_first__41_BITS_239_TO_22_ETC___d196;
  tUInt8 DEF_NOT_adjust_outputFIFO_first__41_BITS_287_TO_27_ETC___d207;
  tUInt8 DEF_NOT_adjust_outputFIFO_first__41_BITS_335_TO_32_ETC___d214;
  tUInt8 DEF_NOT_adjust_outputFIFO_first__41_BITS_143_TO_12_ETC___d170;
  tUInt32 DEF_x__h14795;
  tUInt32 DEF_x__h7356;
 
 /* Rules */
 public:
  void RL_adjust_loop();
  void RL_adjust_loop_end();
  void RL_f0();
  void RL_f1();
  void RL_f2();
  void RL_c0();
  void RL_c1();
  void RL_c2();
  void RL_finish();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkPitchAdjustTest &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkPitchAdjustTest &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkPitchAdjustTest &backing);
};

#endif /* ifndef __mkPitchAdjustTest_h__ */
